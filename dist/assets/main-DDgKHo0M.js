(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&a(n)}).observe(document,{childList:!0,subtree:!0});function o(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function a(e){if(e.ep)return;e.ep=!0;const r=o(e);fetch(e.href,r)}})();const p="modulepreload",g=function(s,c){return new URL(s,c).href},h={},v=function(c,o,a){let e=Promise.resolve();if(o&&o.length>0){const n=document.getElementsByTagName("link"),t=document.querySelector("meta[property=csp-nonce]"),m=(t==null?void 0:t.nonce)||(t==null?void 0:t.getAttribute("nonce"));e=Promise.allSettled(o.map(l=>{if(l=g(l,a),l in h)return;h[l]=!0;const d=l.endsWith(".css"),y=d?'[rel="stylesheet"]':"";if(!!a)for(let u=n.length-1;u>=0;u--){const f=n[u];if(f.href===l&&(!d||f.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${l}"]${y}`))return;const i=document.createElement("link");if(i.rel=d?"stylesheet":p,d||(i.as="script"),i.crossOrigin="",i.href=l,m&&i.setAttribute("nonce",m),document.head.appendChild(i),d)return new Promise((u,f)=>{i.addEventListener("load",u),i.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${l}`)))})}))}function r(n){const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=n,window.dispatchEvent(t),!t.defaultPrevented)throw n}return e.then(n=>{for(const t of n||[])t.status==="rejected"&&r(t.reason);return c().catch(r)})};async function b(){try{return(await v(()=>import("./html2canvas.esm-CBrSDip1.js"),[],import.meta.url)).default}catch(s){throw console.error("Failed to load html2canvas:",s),s}}document.getElementById("screenshotButton").addEventListener("click",async()=>{try{const s=await b(),c=document.getElementById("ascii-container"),o=document.createElement("div");o.style.padding="20px",o.style.backgroundColor=backgroundColor,o.style.display="inline-block";const a=c.firstChild.cloneNode(!0);o.appendChild(a),document.body.appendChild(o);try{(await s(o,{backgroundColor,scale:2,logging:!1,useCORS:!0,allowTaint:!0,foreignObjectRendering:!1})).toBlob(r=>{const n=URL.createObjectURL(r),t=document.createElement("a");t.download="ASCII_art.png",t.href=n,t.click(),URL.revokeObjectURL(n)},"image/png")}catch(e){console.error("Screenshot error:",e),alert("Failed to create screenshot. Please try again.")}finally{document.body.removeChild(o)}}catch(s){console.error("Screenshot setup error:",s),alert("Failed to setup screenshot. Please try again.")}});
